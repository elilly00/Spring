<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd">
<!-- 
	xmlns : 현재 xml에서 대표로 사용한 namespace를 지정하는 것 
			beans:... 인 접두어(beans:)를 생략 할 수 있다는 의미
-->

<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven /> <!-- beans부분에 mvc를 정의 해놓지 않아 빨간줄이 뜨기 때문에 Namespaces에서 mvc를 체크하여 추가함-->
	<!-- mvc에서 객체를 만들 때 annotation 방식을 사용하겠다 -->
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<!-- 컨트롤러의 처리가 필요없이 해당 위치(작은 resources (/resoursces/**)에 바로 접근 할 수 있도록 함 -->	
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> <!-- bean: 객체를 생성하는 태그  (객체: InternalResourceViewResolver) --> <!-- ViewResolver : 어떤 뷰로 연결 할 것인지 찾아주는 역할 -->
		<property name="prefix" value="/WEB-INF/views/member/" /> <!-- 단어의 앞에 붙는 것 : prefix -->
		<property name="suffix" value=".jsp" />			 		  <!-- 단어의 뒤에 붙는 것  : suffix --> 
		<!-- ↳ setter를 만드는 방식과 유사함 -->
	</bean> 
	
	<context:component-scan base-package="com.kh.spring" /> 
	<!-- 
		context:component-scan : 안에 있는 요소들을 모두 읽어 들이겠다(활성화 하겠다) 
		 -> 내가 사용할 부분만 작성해도 되지만 지금은 어디를 사용할지 모르기때문에 범위를 가장 넓게 작성했음 
	-->
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/> 
			<bean id="loggerInterceptor" class="com.kh.spring.common.interceptor.TestInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
</beans>
